def distinct_subarray_sums_linear(arr):
    # Step 1: Calculate all prefix sums in O(n)
    prefix_sums = [0]  # Include 0 for empty prefix
    current_sum = 0
    
    for num in arr:
        current_sum += num
        prefix_sums.append(current_sum)
    
    # Step 2: Find min and max prefix sums in O(n)
    min_prefix = min(prefix_sums)
    max_prefix = max(prefix_sums)
    
    # Step 3: All subarray sums are differences between prefix sums
    # Range: [min_prefix - max_prefix, max_prefix - min_prefix]
    min_subarray_sum = min_prefix - max_prefix
    max_subarray_sum = max_prefix - min_prefix
    
    # Step 4: Return all integers in this range
    return set(range(min_subarray_sum, max_subarray_sum + 1))

# Example usage
arr = [-1, -1, -1, -1]
result = distinct_subarray_sums_linear(arr)
print(f"Array: {arr}")
print(f"Distinct subarray sums: {sorted(result)}")
# Output: [-2, -1, 0, 1, 2]
